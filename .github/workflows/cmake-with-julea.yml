name: Compile ADIOS2 with JULEA

on:
  #TODO use dispatch so it is triggered when JULEA is updated?
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # TODO: Debug?
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Checkout JULEA
      run: git clone -b dai https://github.com/Bella42/julea.git

      # TODO: with JULEA system packages have to be removed; necessary here as well?
    - name: Install JULEA dependencies
      run: ${{github.workspace}}/julea/scripts/install-dependencies.sh

    #TODO: configure MariaDB and MySQL
    #   if: ${{ matrix.julea.db == 'mysql' && matrix.julea.db-server == 'mysql' }}
    # - name: Set up MariaDB
    #   if: ${{ matrix.julea.db == 'mysql' && matrix.julea.db-server == 'mariadb' }}
    - name: Setup JULEA environment
      # env:
      run: ${{github.workspace}}/julea/scripts/environment.sh
    
    - name: Configure JULEA with meson
      # TODO: use and install release build
      run: meson setup --prefix="julea-install" bld
    
    - name: Compile JULEA
      run: ninja -C bld
    
    - name: Create JULEA configuration
      # run: julea-config --user --object-servers="$(hostname)" --kv-servers="$(hostname)" --db-servers="$(hostname)" --object-backend=posix --object-component=server --object-path="/tmp/julea-$(id -u)/posix" --kv-backend=lmdb --kv-component=server --kv-path="/tmp/julea-$(id -u)/lmdb" --db-backend=sqlite --db-component=server --db-path="/tmp/julea-$(id -u)/sqlite"
      run: |
        julea-config --user --object-servers="$(hostname)" --kv-servers="$(hostname)" --db-servers="$(hostname)" --object-backend="${{ matrix.julea.object }}" --object-component=server --object-path="/tmp/julea/object/${{ matrix.julea.object }}" --kv-backend="${{ matrix.julea.kv }}" --kv-component="${JULEA_KV_COMPONENT}" --kv-path="${JULEA_KV_PATH}" --db-backend="${{ matrix.julea.db }}" --db-component="${JULEA_DB_COMPONENT}" --db-path="${JULEA_DB_PATH}"
    
    - name: Run JULEA tests
      env:
          LSAN_OPTIONS: exitcode=0
      run: |
          . scripts/environment.sh
          ./scripts/setup.sh start
          ./scripts/test.sh
          sleep 10
          ./scripts/test.sh
          ./scripts/setup.sh stop
    # - name: Make example
    # - name: Run example



    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DADIOS2_USE_Fortran=OFF -DADIOS2_USE_MPI=ON -DADIOS2_USE_DataMan=OFF -DADIOS2_USE_BZip2=OFF -DADIOS2_USE_PNG=OFF -DADIOS2_USE_JULEA=ON

    - name: Build
      # TODO: number processes?
      run: make -j 4

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}